name: CI/CD Pipeline for Quotes API

on:
  push:
    branches: [ main ]
    paths:
      - 'Project3/app/**'
      - '.github/workflows/ci_pipeline_project3.yml'

  pull_request:
    branches: [ main ]
    paths:
      - 'Project3/app/**'
      - '.github/workflows/ci_pipeline_project3.yml'

  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ./Project3/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ./Project3

      - name: Run tests
        run: npm test
        working-directory: ./Project3
        continue-on-error: true

      - name: Security Audit
        run: npm audit --audit-level=moderate
        working-directory: ./Project3
        continue-on-error: true

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: ./Project3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy app using SSM
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --instance-ids ${{ secrets.WEB_APP_INSTANCE_ID }} \
            --comment "Deploy Node.js app via SSM" \
            --parameters 'commands= [
              "sudo apt update -y",
              "sudo apt install -y nodejs npm git",
              "sudo npm install -g pm2",
              "rm -rf /home/ubuntu/DevOps-Journey-Practice",
              "git clone https://github.com/Osi45/DevOps-Journey-Practice.git /home/ubuntu/DevOps-Journey-Practice",
              "cd /home/ubuntu/DevOps-Journey-Practice/Project3/app",
              "test -f index.js || { echo \"index.js not found. Exiting.\"; exit 1; }",
              "npm install",
              "pm2 delete index || true",
              "pm2 start index.js --name index",
              "pm2 save"
            ]' \
            --region us-east-1 \
            --output text

      - name: Slack Success Notification
        if: success()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-message: |
            ✅ *Project3 Web App* deployment succeeded!
            *Branch:* ${{ github.ref_name }}
            *Commit:* <${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>
            *Actor:* ${{ github.actor }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Slack Failure Notification
        if: failure()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-message: |
            ❌ *Project3 Web App* deployment failed!
            *Branch:* ${{ github.ref_name }}
            *Commit:* <${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>
            *Actor:* ${{ github.actor }}
            <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View workflow run>
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
